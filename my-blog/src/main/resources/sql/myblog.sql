/*
SQLyog Ultimate v12.09 (64 bit)
MySQL - 5.7.26 : Database - mybatisplus
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`mybatisplus` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `mybatisplus`;

/*Table structure for table `article_comment` */

DROP TABLE IF EXISTS `article_comment`;

CREATE TABLE `article_comment` (
  `id` varchar(50) NOT NULL,
  `comment_content` mediumtext,
  `reply_comment_id` varchar(50) NOT NULL DEFAULT '0' COMMENT '回复评论id',
  `comment_user_id` varchar(50) NOT NULL,
  `support` int(11) DEFAULT NULL COMMENT '支持（赞）',
  `oppose` int(11) DEFAULT NULL COMMENT '反对（踩）',
  `comment_user_name` varchar(50) NOT NULL,
  `comment_user_avatar` varchar(255) DEFAULT NULL COMMENT '用户头像地址',
  `create_time` varchar(50) DEFAULT NULL COMMENT '评论时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `article_comment` */

/*Table structure for table `article_info` */

DROP TABLE IF EXISTS `article_info`;

CREATE TABLE `article_info` (
  `id` varchar(50) NOT NULL COMMENT 'ID',
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '文章标题',
  `user_id` varchar(50) NOT NULL COMMENT '用户ID',
  `cover_image` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '文章封面图片',
  `qrcode_path` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '文章专属二维码地址',
  `content` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT '文章内容',
  `top` tinyint(1) DEFAULT '0' COMMENT '是否置顶',
  `type_id` varchar(50) NOT NULL COMMENT '类型',
  `status` tinyint(1) unsigned DEFAULT '1' COMMENT '状态',
  `recommended` tinyint(1) unsigned DEFAULT '0' COMMENT '是否推荐',
  `original` tinyint(1) unsigned DEFAULT '1' COMMENT '是否原创',
  `description` varchar(300) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '文章简介，最多200字',
  `keywords` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '文章关键字，优化搜索',
  `comment` tinyint(1) unsigned DEFAULT '1' COMMENT '是否开启评论',
  `create_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',
  `create_time_str` varchar(50) DEFAULT NULL,
  `update_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  `update_time_str` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `article_info` */

insert  into `article_info`(`id`,`title`,`user_id`,`cover_image`,`qrcode_path`,`content`,`top`,`type_id`,`status`,`recommended`,`original`,`description`,`keywords`,`comment`,`create_time`,`create_time_str`,`update_time`,`update_time_str`) values ('1218454923222474753','Thyleaf语法详解','1218152760495570946',NULL,NULL,'<h1 id=\"thymeleaf3语法详解\">Thymeleaf3语法详解</h1><p>Thymeleaf是Spring boot推荐使用的模版引擎，除此之外常见的还有Freemarker和Jsp。Jsp应该是我们最早接触的模版引擎。而Freemarker工作中也很常见（<a href=\"http://www.cnblogs.com/itdragon/p/7750903.html\">Freemarker教程</a>）。今天我们从三个方面学习Thymeleaf的语法：有常见的TH属性，四种标准表达式用法，在SpringBoot中的应用。还在等什么，一起来学吧！</p><p>技术：Thymeleaf，SpringBoot</p><p>说明：为突出Thymeleaf3的语法知识，文章只提出与Thymeleaf有关的代码，完整代码请异步github，喜欢的朋友可以点个star，蟹蟹！</p><p>源码：https://github.com/ITDragonBlog/daydayup/tree/master/Thymeleaf/spring-boot-thymeleaf</p><p>好文推荐： http://www.cnblogs.com/itdragon/p/8709948.html</p><p>文章目录结构：<br><img src=\"https://images2018.cnblogs.com/blog/806956/201804/806956-20180412175920781-874860611.png\" alt=\"文章目录结构\"></p><h2 id=\"一th属性\">一、th属性</h2><h3 id=\"常用th属性解读\">常用th属性解读</h3><p>html有的属性，Thymeleaf基本都有，而常用的属性大概有七八个。其中th属性执行的优先级从1~8，数字越低优先级越高。</p><p>一、<strong>th:text</strong>&nbsp;：设置当前元素的文本内容，相同功能的还有<strong>th:utext</strong>，两者的区别在于前者不会转义html标签，后者会。优先级不高：order=7</p><p>二、<strong>th:value</strong>：设置当前元素的value值，类似修改指定属性的还有<strong>th:src</strong>，<strong>th:href</strong>。优先级不高：order=6</p><p>三、<strong>th:each</strong>：遍历循环元素，和th:text或th:value一起使用。注意该属性修饰的标签位置，详细往后看。优先级很高：order=2</p><p>四、<strong>th:if</strong>：条件判断，类似的还有<strong>th:unless</strong>，<strong>th:switch</strong>，<strong>th:case</strong>。优先级较高：order=3</p><p>五、<strong>th:insert</strong>：代码块引入，类似的还有<strong>th:replace</strong>，<strong>th:include</strong>，三者的区别较大，若使用不恰当会破坏html结构，常用于公共代码块提取的场景。优先级最高：order=1</p><p>六、<strong>th:fragment</strong>：定义代码块，方便被th:insert引用。优先级最低：order=8</p><p>七、<strong>th:object</strong>：声明变量，一般和*{}一起配合使用，达到偷懒的效果。优先级一般：order=4</p><p>八、<strong>th:attr</strong>：修改任意属性，实际开发中用的较少，因为有丰富的其他th属性帮忙，类似的还有th:attrappend，th:attrprepend。优先级一般：order=5</p><h3 id=\"常用th属性使用\">常用th属性使用</h3><p>使用Thymeleaf属性需要注意点以下五点：</p><p>一、若要使用Thymeleaf语法，首先要声明名称空间：&nbsp;<code>xmlns:th=\"http://www.thymeleaf.org\"</code></p><p>二、设置文本内容 th:text，设置input的值 th:value，循环输出 th:each，条件判断 th:if，插入代码块 th:insert，定义代码块 th:fragment，声明变量 th:object</p><p>三、th:each 的用法需要格外注意，打个比方：如果你要循环一个div中的p标签，则th:each属性必须放在p标签上。若你将th:each属性放在div上，则循环的是将整个div。</p><p>四、变量表达式中提供了很多的内置方法，该内置方法是用#开头，请不要与#{}消息表达式弄混。</p><p>五、th:insert，th:replace，th:include 三种插入代码块的效果相似，但区别很大。</p><pre class=\"html\"><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-comment\">&lt;!--名称空间--&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span> <span class=\"hljs-attr\">xmlns:th</span>=<span class=\"hljs-string\">\"http://www.thymeleaf.org\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Thymeleaf 语法<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>ITDragon Thymeleaf 语法<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n    <span class=\"hljs-comment\">&lt;!--th:text 设置当前元素的文本内容，常用，优先级不高--&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${thText}\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">th:utext</span>=<span class=\"hljs-string\">\"${thUText}\"</span> /&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!--th:value 设置当前元素的value值，常用，优先级仅比th:text高--&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">th:value</span>=<span class=\"hljs-string\">\"${thValue}\"</span> /&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!--th:each 遍历列表，常用，优先级很高，仅此于代码块的插入--&gt;</span>\n    <span class=\"hljs-comment\">&lt;!--th:each 修饰在div上，则div层重复出现，若只想p标签遍历，则修饰在p标签上--&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">th:each</span>=<span class=\"hljs-string\">\"message : ${thEach}\"</span>&gt;</span> <span class=\"hljs-comment\">&lt;!-- 遍历整个div-p，不推荐--&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${message}\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span> <span class=\"hljs-comment\">&lt;!--只遍历p，推荐使用--&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${message}\"</span> <span class=\"hljs-attr\">th:each</span>=<span class=\"hljs-string\">\"message : ${thEach}\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!--th:if 条件判断，类似的有th:switch，th:case，优先级仅次于th:each, 其中#strings是变量表达式的内置方法--&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${thIf}\"</span> <span class=\"hljs-attr\">th:if</span>=<span class=\"hljs-string\">\"${not #strings.isEmpty(thIf)}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!--th:insert 把代码块插入当前div中，优先级最高，类似的有th:replace，th:include，~{} ：代码块表达式 --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">th:insert</span>=<span class=\"hljs-string\">\"~{grammar/common::thCommon}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-comment\">&lt;!--th:object 声明变量，和*{} 一起使用--&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">th:object</span>=<span class=\"hljs-string\">\"${thObject}\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>ID: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"*{id}\"</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><span class=\"hljs-comment\">&lt;!--th:text=\"${thObject.id}\"--&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>TH: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"*{thName}\"</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><span class=\"hljs-comment\">&lt;!--${thObject.thName}--&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>DE: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"*{desc}\"</span> /&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span><span class=\"hljs-comment\">&lt;!--${thObject.desc}--&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></code></pre><p>后台给负责给变量赋值，和跳转页面。</p><pre class=\"java\"><code class=\"hljs\"><span class=\"hljs-keyword\">import</span> com.itdragon.entities.ThObject;\n<span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Controller;\n<span class=\"hljs-keyword\">import</span> org.springframework.ui.ModelMap;\n<span class=\"hljs-keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;\n<span class=\"hljs-keyword\">import</span> java.util.ArrayList;\n<span class=\"hljs-keyword\">import</span> java.util.Arrays;\n<span class=\"hljs-keyword\">import</span> java.util.List;\n\n<span class=\"hljs-meta\">@Controller</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ThymeleafController</span> </span>{\n\n    <span class=\"hljs-meta\">@RequestMapping</span>(<span class=\"hljs-string\">\"thymeleaf\"</span>)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">thymeleaf</span><span class=\"hljs-params\">(ModelMap map)</span> </span>{\n        map.put(<span class=\"hljs-string\">\"thText\"</span>, <span class=\"hljs-string\">\"th:text 设置文本内容 &lt;b&gt;加粗&lt;/b&gt;\"</span>);\n        map.put(<span class=\"hljs-string\">\"thUText\"</span>, <span class=\"hljs-string\">\"th:utext 设置文本内容 &lt;b&gt;加粗&lt;/b&gt;\"</span>);\n        map.put(<span class=\"hljs-string\">\"thValue\"</span>, <span class=\"hljs-string\">\"thValue 设置当前元素的value值\"</span>);\n        map.put(<span class=\"hljs-string\">\"thEach\"</span>, Arrays.asList(<span class=\"hljs-string\">\"th:each\"</span>, <span class=\"hljs-string\">\"遍历列表\"</span>));\n        map.put(<span class=\"hljs-string\">\"thIf\"</span>, <span class=\"hljs-string\">\"msg is not null\"</span>);\n        map.put(<span class=\"hljs-string\">\"thObject\"</span>, <span class=\"hljs-keyword\">new</span> ThObject(<span class=\"hljs-number\">1L</span>, <span class=\"hljs-string\">\"th:object\"</span>, <span class=\"hljs-string\">\"用来偷懒的th属性\"</span>));\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"grammar/thymeleaf\"</span>;\n    }\n}</code></pre><h2 id=\"二标准表达式语法\">二、标准表达式语法</h2><p><code>${...}</code>&nbsp;变量表达式，Variable Expressions</p><p><code>@{...}</code>&nbsp;链接表达式，Link URL Expressions</p><p><code>#{...}</code>&nbsp;消息表达式，Message Expressions</p><p><code>~{...}</code>&nbsp;代码块表达式，Fragment Expressions</p><p><code>*{...}</code>&nbsp;选择变量表达式，Selection Variable Expressions</p><p>变量表达式使用频率最高，其功能也是非常的丰富。所以我们先从简单的代码块表达式开始，然后是消息表达式，再是链接表达式，最后是变量表达式，随带介绍选择变量表达式。</p><h3 id=\"代码块表达式\">~{...} 代码块表达式</h3><h4 id=\"支持两种语法结构\">支持两种语法结构</h4><p>推荐：<code>~{templatename::fragmentname}</code></p><p>支持：<code>~{templatename::#id}</code></p><p>templatename：模版名，Thymeleaf会根据模版名解析完整路径：/resources/templates/templatename.html，要注意文件的路径。</p><p>fragmentname：片段名，Thymeleaf通过th:fragment声明定义代码块，即：<code>th:fragment=\"fragmentname\"</code></p><p>id：HTML的id选择器，使用时要在前面加上#号，不支持class选择器。</p><h4 id=\"代码块表达式的使用\">代码块表达式的使用</h4><p>代码块表达式需要配合th属性（th:insert，th:replace，th:include）一起使用。</p><p><strong>th:insert</strong>：将代码块片段整个插入到使用了th:insert的HTML标签中，</p><p><strong>th:replace</strong>：将代码块片段整个替换使用了th:replace的HTML标签中，</p><p><strong>th:include</strong>：将代码块片段包含的内容插入到使用了th:include的HTML标签中，</p><p>用一个官方例子来区分三者的不同，第三部分会通过实战再次用到该知识。</p><pre class=\"html\"><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--th:fragment定义代码块标识--&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">footer</span> <span class=\"hljs-attr\">th:fragment</span>=<span class=\"hljs-string\">\"copy\"</span>&gt;</span>\n&amp;copy; 2011 The Good Thymes Virtual Grocery\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">footer</span>&gt;</span>\n\n<span class=\"hljs-comment\">&lt;!--三种不同的引入方式--&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">th:insert</span>=<span class=\"hljs-string\">\"footer :: copy\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">th:replace</span>=<span class=\"hljs-string\">\"footer :: copy\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">th:include</span>=<span class=\"hljs-string\">\"footer :: copy\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-comment\">&lt;!--th:insert是在div中插入代码块，即多了一层div--&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">footer</span>&gt;</span>\n    &amp;copy; 2011 The Good Thymes Virtual Grocery\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">footer</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!--th:replace是将代码块代替当前div，其html结构和之前一致--&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">footer</span>&gt;</span>\n&amp;copy; 2011 The Good Thymes Virtual Grocery\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">footer</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!--th:include是将代码块footer的内容插入到div中，即少了一层footer--&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n&amp;copy; 2011 The Good Thymes Virtual Grocery\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></code></pre><h3 id=\"消息表达式\">#{...} 消息表达式</h3><p>消息表达式一般用于国际化的场景。结构：<code>th:text=\"#{msg}\"</code>&nbsp;。会在第三部分的实战详细介绍。</p><h3 id=\"链接表达式\">@{...} 链接表达式</h3><h4 id=\"链接表达式好处\">链接表达式好处</h4><p>不管是静态资源的引用，form表单的请求，凡是链接都可以用<code>@{...}</code>&nbsp;。这样可以动态获取项目路径，即便项目名变了，依然可以正常访问</p><pre class=\"properties\"><code class=\"hljs shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\">修改项目名，链接表达式会自动修改路径，避免资源文件找不到</span>\nserver.context-path=/itdragon</code></pre><h4 id=\"链接表达式结构\">链接表达式结构</h4><p>无参：<code>@{/xxx}</code></p><p>有参：<code>@{/xxx(k1=v1,k2=v2)}</code>&nbsp;对应url结构：<code>xxx?k1=v1&amp;k2=v2</code></p><p>引入本地资源：<code>@{/项目本地的资源路径}</code></p><p>引入外部资源：<code>@{/webjars/资源在jar包中的路径}</code></p><p>列举：第三部分的实战引用会详细使用该表达式</p><pre class=\"html\"><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">th:href</span>=<span class=\"hljs-string\">\"@{/webjars/bootstrap/4.0.0/css/bootstrap.css}\"</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">th:href</span>=<span class=\"hljs-string\">\"@{/main/css/itdragon.css}\"</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"form-login\"</span> <span class=\"hljs-attr\">th:action</span>=<span class=\"hljs-string\">\"@{/user/login}\"</span> <span class=\"hljs-attr\">th:method</span>=<span class=\"hljs-string\">\"post\"</span> &gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn btn-sm\"</span> <span class=\"hljs-attr\">th:href</span>=<span class=\"hljs-string\">\"@{/login.html(l=\'zh_CN\')}\"</span>&gt;</span>中文<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn btn-sm\"</span> <span class=\"hljs-attr\">th:href</span>=<span class=\"hljs-string\">\"@{/login.html(l=\'en_US\')}\"</span>&gt;</span>English<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span></code></pre><h3 id=\"变量表达式\">${...}变量表达式</h3><p>变量表达式有丰富的内置方法，使其更强大，更方便。</p><h4 id=\"变量表达式功能\">变量表达式功能</h4><p>一、可以获取对象的属性和方法</p><p>二、可以使用ctx，vars，locale，request，response，session，servletContext内置对象</p><p>三、可以使用dates，numbers，strings，objects，arrays，lists，sets，maps等内置方法（重点介绍）</p><h4 id=\"常用的内置对象\">常用的内置对象</h4><p>一、<strong>ctx</strong>&nbsp;：上下文对象。</p><p>二、<strong>vars</strong>&nbsp;：上下文变量。</p><p>三、<strong>locale</strong>：上下文的语言环境。</p><p>四、<strong>request</strong>：（仅在web上下文）的 HttpServletRequest 对象。</p><p>五、<strong>response</strong>：（仅在web上下文）的 HttpServletResponse 对象。</p><p>六、<strong>session</strong>：（仅在web上下文）的 HttpSession 对象。</p><p>七、<strong>servletContext</strong>：（仅在web上下文）的 ServletContext 对象</p><p>这里以常用的Session举例，用户刊登成功后，会把用户信息放在Session中，Thymeleaf通过内置对象将值从session中获取。</p><pre class=\"java\"><code class=\"hljs\"><span class=\"hljs-comment\">// java 代码将用户名放在session中</span>\nsession.setAttribute(<span class=\"hljs-string\">\"userinfo\"</span>,username);\n<span class=\"hljs-comment\">// Thymeleaf通过内置对象直接获取</span>\nth:text=<span class=\"hljs-string\">\"${session.userinfo}\"</span></code></pre><h4 id=\"常用的内置方法\">常用的内置方法</h4><p>一、<strong>strings</strong>：字符串格式化方法，常用的Java方法它都有。比如：equals，equalsIgnoreCase，length，trim，toUpperCase，toLowerCase，indexOf，substring，replace，startsWith，endsWith，contains，containsIgnoreCase等</p><p>二、<strong>numbers</strong>：数值格式化方法，常用的方法有：formatDecimal等</p><p>三、<strong>bools</strong>：布尔方法，常用的方法有：isTrue，isFalse等</p><p>四、<strong>arrays</strong>：数组方法，常用的方法有：toArray，length，isEmpty，contains，containsAll等</p><p>五、<strong>lists</strong>，<strong>sets</strong>：集合方法，常用的方法有：toList，size，isEmpty，contains，containsAll，sort等</p><p>六、<strong>maps</strong>：对象方法，常用的方法有：size，isEmpty，containsKey，containsValue等</p><p>七、<strong>dates</strong>：日期方法，常用的方法有：format，year，month，hour，createNow等</p><p>文章底部提供了对应的官网链接</p><pre class=\"html\"><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span> <span class=\"hljs-attr\">xmlns:th</span>=<span class=\"hljs-string\">\"http://www.thymeleaf.org\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>ITDragon Thymeleaf 内置方法<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span>&gt;</span>ITDragon Thymeleaf 内置方法<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>#strings <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">th:if</span>=<span class=\"hljs-string\">\"${not #strings.isEmpty(itdragonStr)}\"</span> &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Old Str : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${itdragonStr}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>toUpperCase : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#strings.toUpperCase(itdragonStr)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>toLowerCase : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#strings.toLowerCase(itdragonStr)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>equals : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#strings.equals(itdragonStr, \'itdragonblog\')}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>equalsIgnoreCase : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#strings.equalsIgnoreCase(itdragonStr, \'itdragonblog\')}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>indexOf : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#strings.indexOf(itdragonStr, \'r\')}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>substring : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#strings.substring(itdragonStr, 2, 8)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>replace : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#strings.replace(itdragonStr, \'it\', \'IT\')}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>startsWith : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#strings.startsWith(itdragonStr, \'it\')}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>contains : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#strings.contains(itdragonStr, \'IT\')}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>#numbers <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>formatDecimal 整数部分随意，小数点后保留两位，四舍五入: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#numbers.formatDecimal(itdragonNum, 0, 2)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>formatDecimal 整数部分保留五位数，小数点后保留两位，四舍五入: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#numbers.formatDecimal(itdragonNum, 5, 2)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>#bools <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">th:if</span>=<span class=\"hljs-string\">\"${#bools.isTrue(itdragonBool)}\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${itdragonBool}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>#arrays <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">th:if</span>=<span class=\"hljs-string\">\"${not #arrays.isEmpty(itdragonArray)}\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>length : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#arrays.length(itdragonArray)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>contains : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#arrays.contains(itdragonArray, 5)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>containsAll : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#arrays.containsAll(itdragonArray, itdragonArray)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>#lists <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">th:if</span>=<span class=\"hljs-string\">\"${not #lists.isEmpty(itdragonList)}\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>size : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#lists.size(itdragonList)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>contains : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#lists.contains(itdragonList, 0)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>sort : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#lists.sort(itdragonList)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>#maps <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">th:if</span>=<span class=\"hljs-string\">\"${not #maps.isEmpty(itdragonMap)}\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>size : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#maps.size(itdragonMap)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>containsKey : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#maps.containsKey(itdragonMap, \'thName\')}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>containsValue : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#maps.containsValue(itdragonMap, \'#maps\')}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>#dates <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>format : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#dates.format(itdragonDate)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>custom format : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#dates.format(itdragonDate, \'yyyy-MM-dd HH:mm:ss\')}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>day : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#dates.day(itdragonDate)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>month : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#dates.month(itdragonDate)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>monthName : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#dates.monthName(itdragonDate)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>year : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#dates.year(itdragonDate)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>dayOfWeekName : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#dates.dayOfWeekName(itdragonDate)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>hour : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#dates.hour(itdragonDate)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>minute : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#dates.minute(itdragonDate)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>second : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#dates.second(itdragonDate)}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>createNow : <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#dates.createNow()}\"</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></code></pre><p>后台给负责给变量赋值，和跳转页面。</p><pre class=\"java\"><code class=\"hljs\"><span class=\"hljs-meta\">@RequestMapping</span>(<span class=\"hljs-string\">\"varexpressions\"</span>)\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">varexpressions</span><span class=\"hljs-params\">(ModelMap map)</span> </span>{\n  map.put(<span class=\"hljs-string\">\"itdragonStr\"</span>, <span class=\"hljs-string\">\"itdragonBlog\"</span>);\n  map.put(<span class=\"hljs-string\">\"itdragonBool\"</span>, <span class=\"hljs-keyword\">true</span>);\n  map.put(<span class=\"hljs-string\">\"itdragonArray\"</span>, <span class=\"hljs-keyword\">new</span> Integer[]{<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>});\n  map.put(<span class=\"hljs-string\">\"itdragonList\"</span>, Arrays.asList(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">0</span>));\n  Map itdragonMap = <span class=\"hljs-keyword\">new</span> HashMap();\n  itdragonMap.put(<span class=\"hljs-string\">\"thName\"</span>, <span class=\"hljs-string\">\"${#...}\"</span>);\n  itdragonMap.put(<span class=\"hljs-string\">\"desc\"</span>, <span class=\"hljs-string\">\"变量表达式内置方法\"</span>);\n  map.put(<span class=\"hljs-string\">\"itdragonMap\"</span>, itdragonMap);\n  map.put(<span class=\"hljs-string\">\"itdragonDate\"</span>, <span class=\"hljs-keyword\">new</span> Date());\n  map.put(<span class=\"hljs-string\">\"itdragonNum\"</span>, <span class=\"hljs-number\">888.888</span>D);\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"grammar/varexpressions\"</span>;\n}</code></pre><h2 id=\"三thymeleaf在springboot应用\">三、Thymeleaf在SpringBoot应用</h2><p>Thymeleaf是Spring Boot 官方推荐使用的模版引擎，这也意味着用Thymeleaf比其他模版引擎更简单。</p><p>开发步骤：</p><p>第一步：引入Thymeleaf依赖。</p><p>第二步： 提取公共页面，提高代码的重用性，统一页面风格。</p><p>第三步：页面显示和国际化功能</p><h3 id=\"引入thymeleaf\">引入Thymeleaf</h3><p>pom.xml 引入Thymeleaf的依赖，并确定其版本</p><pre class=\"xml\"><code class=\"hljs\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">properties</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">project.build.sourceEncoding</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">project.reporting.outputEncoding</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">java.version</span>&gt;</span>1.8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">java.version</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">thymeleaf.version</span>&gt;</span>3.0.9.RELEASE<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">thymeleaf.version</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">thymeleaf-layout-dialect.version</span>&gt;</span>2.2.2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">thymeleaf-layout-dialect.version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">properties</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span> <span class=\"hljs-comment\">&lt;!--引入模版引擎thymeleaf--&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span></code></pre><h3 id=\"提取公共页面\">提取公共页面</h3><p>为了统一页面风格，提高页面的复用率，我们一般都会提取公共页面。之前在文章中介绍了SiteMesh的使用，今天用Thymeleaf来实现。</p><p>统一规范引入的资源文件</p><pre class=\"html\"><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span> <span class=\"hljs-attr\">xmlns:th</span>=<span class=\"hljs-string\">\"http://www.thymeleaf.org\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span> <span class=\"hljs-attr\">th:fragment</span>=<span class=\"hljs-string\">\"common-head\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">http-equiv</span>=<span class=\"hljs-string\">\"Content-Type\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"text/html; charset=UTF-8\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"initial-scale=1.0, width=device-width, user-scalable=no\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>ITDragon系统<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"image/x-icon\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"images/favicon.ico\"</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"shortcut icon\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">th:href</span>=<span class=\"hljs-string\">\"@{/sb-admin-1.0.4/css/bootstrap.min.css}\"</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">th:href</span>=<span class=\"hljs-string\">\"@{/sb-admin-1.0.4/css/sb-admin.css}\"</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">th:href</span>=<span class=\"hljs-string\">\"@{/sb-admin-1.0.4/css/plugins/morris.css}\"</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">th:href</span>=<span class=\"hljs-string\">\"@{/sb-admin-1.0.4/font-awesome/css/font-awesome.min.css}\"</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">th:src</span>=<span class=\"hljs-string\">\"@{/sb-admin-1.0.4/js/jquery.js}\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">th:src</span>=<span class=\"hljs-string\">\"@{/sb-admin-1.0.4/js/bootstrap.min.js}\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">th:src</span>=<span class=\"hljs-string\">\"@{/sb-admin-1.0.4/js/plugins/morris/raphael.min.js}\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">th:src</span>=<span class=\"hljs-string\">\"@{/sb-admin-1.0.4/js/plugins/morris/morris.min.js}\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">th:src</span>=<span class=\"hljs-string\">\"@{/sb-admin-1.0.4/js/plugins/morris/morris-data.js}\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></code></pre><p>统一左侧菜单栏</p><pre class=\"html\"><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span> <span class=\"hljs-attr\">xmlns:th</span>=<span class=\"hljs-string\">\"http://www.thymeleaf.org\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">\"UTF-8\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">header</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"header\"</span> <span class=\"hljs-attr\">th:fragment</span>=<span class=\"hljs-string\">\"common-header\"</span>&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- Navigation --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">nav</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"navbar navbar-inverse navbar-fixed-top\"</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">\"navigation\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"navbar-header\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"button\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"navbar-toggle\"</span> <span class=\"hljs-attr\">data-toggle</span>=<span class=\"hljs-string\">\"collapse\"</span> <span class=\"hljs-attr\">data-target</span>=<span class=\"hljs-string\">\".navbar-ex1-collapse\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"sr-only\"</span>&gt;</span>Toggle navigation<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"icon-bar\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"icon-bar\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"icon-bar\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"navbar-brand\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"/dashboard\"</span>&gt;</span>ITDragon sb-admin-1.0.4<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-comment\">&lt;!--和知识点没关系的代码，这里就补贴出来了，完整代码请异步github--&gt;</span>\n        <span class=\"hljs-comment\">&lt;!-- Sidebar Menu Items - These collapse to the responsive navigation menu on small screens --&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"collapse navbar-collapse navbar-ex1-collapse\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"nav navbar-nav side-nav itdragon-nav\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">th:class</span>=<span class=\"hljs-string\">\"${activeUrl==\'dashboard\'?\'nav-link active\':\'nav-link\'}\"</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">th:href</span>=<span class=\"hljs-string\">\"@{/dashboard}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"fa fa-fw fa-dashboard\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span> Dashboard<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">th:class</span>=<span class=\"hljs-string\">\"${activeUrl==\'employees\'?\'nav-link active\':\'nav-link\'}\"</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">th:href</span>=<span class=\"hljs-string\">\"@{/employees}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"fa fa-fw fa-bar-chart-o\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span> Employees<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-comment\">&lt;!-- /.navbar-collapse --&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">nav</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">header</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></code></pre><p>以上代码用到了三个知识点：</p><p>一、使用链接表达式引入本地的资源文件，若引入第三方外部资源文件，可以通过webjars（将资源文件打成jar包放在项目中）方式引入。</p><p>二、使用th:fragment标识需要被引用的代码块，也可以用id选择器但不推荐。</p><p>三、activeUrl变量是通过代码块表达式在其他页面传入的变量，这也是代码块表达式强大的一个功能。</p><h3 id=\"页面显示和国际化\">页面显示和国际化</h3><p>Spring Boot 实现国际化步骤：</p><p>第一步：准备好国际化文件，至少三分（系统默认，中文，英文）</p><p>第二步：在Spring Boot全局配置文件中，指定国际化文件路径，</p><p>第三步：自定义Locale Resolver</p><p>第四步：在页面上使用消息表达式输出国际化内容</p><p>这里只贴出第四步的代码，前三步以及完整代码请异步github</p><pre class=\"html\"><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"en\"</span> <span class=\"hljs-attr\">xmlns:th</span>=<span class=\"hljs-string\">\"http://www.thymeleaf.org\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span> <span class=\"hljs-attr\">th:replace</span>=<span class=\"hljs-string\">\"~{commons/default::common-head}\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"viewport\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"initial-scale=1.0, width=device-width, user-scalable=no\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">http-equiv</span>=<span class=\"hljs-string\">\"Content-Type\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"text/html; charset=utf-8\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">http-equiv</span>=<span class=\"hljs-string\">\"X-UA-Compatible\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"IE=edge,Chrome=1\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">http-equiv</span>=<span class=\"hljs-string\">\"X-UA-Compatible\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">\"IE=8\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>员工列表<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"wrapper\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">header</span> <span class=\"hljs-attr\">th:replace</span>=<span class=\"hljs-string\">\"~{commons/header::common-header(activeUrl=\'employees\')}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">header</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"page-wrapper\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"container-fluid\"</span>&gt;</span>\n            <span class=\"hljs-comment\">&lt;!-- Page Heading --&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"row\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-lg-12\"</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"page-header\"</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"#{employees}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ol</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"breadcrumb\"</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"fa fa-dashboard\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">th:href</span>=<span class=\"hljs-string\">\"@{/dashboard}\"</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"#{dashboard}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"active\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"fa fa-table\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"#{employees}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ol</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"row\"</span> <span class=\"hljs-attr\">th:if</span>=<span class=\"hljs-string\">\"${not #strings.isEmpty(message)}\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-lg-12\"</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"alert alert-info alert-dismissable\"</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"button\"</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"close\"</span> <span class=\"hljs-attr\">data-dismiss</span>=<span class=\"hljs-string\">\"alert\"</span> <span class=\"hljs-attr\">aria-hidden</span>=<span class=\"hljs-string\">\"true\"</span>&gt;</span>&amp;times;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"fa fa-info-circle\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">strong</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${message}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">strong</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-comment\">&lt;!-- /.row --&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"row\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"col-lg-12\"</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"#{employees}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"table-responsive\"</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"pull-right btn\"</span> <span class=\"hljs-attr\">th:href</span>=<span class=\"hljs-string\">\"@{/employee}\"</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"#{add.employees}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">table</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"table table-striped table-sm\"</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">thead</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"#{id}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"#{last.name}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"#{email}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"#{gender}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"#{department}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"#{position}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"#{birth}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">th</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"#{operation}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">th</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">thead</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tbody</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tr</span> <span class=\"hljs-attr\">th:each</span>=<span class=\"hljs-string\">\"emp:${employees}\"</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${emp.id}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span>[[${emp.lastName}]]<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${emp.email}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${emp.gender}==0?#{female}:#{male}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${emp.department.departmentName}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${emp.department.position}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"${#dates.format(emp.birth, \'yyyy-MM-dd HH:mm\')}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">td</span>&gt;</span>\n                                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn btn-sm btn-success\"</span> <span class=\"hljs-attr\">th:href</span>=<span class=\"hljs-string\">\"@{/employee/}+${emp.id}\"</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"#{edit}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n                                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"btn btn-sm btn-danger deleteBtn\"</span> <span class=\"hljs-attr\">th:href</span>=<span class=\"hljs-string\">\"@{/employee/}+${emp.id}\"</span> <span class=\"hljs-attr\">th:text</span>=<span class=\"hljs-string\">\"#{delete}\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n                                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">td</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tr</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tbody</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">table</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-comment\">&lt;!-- /.row --&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></code></pre><p>以上代码用到了知识点：</p><p>一、页面通过代码块表达式引入公共代码块，并传入参数给公共代码块文件。</p><p>二、页面使用消息表达式输出国际化内容。</p><p>三、使用th:if属性条件判断，使用内置方法#strings.isEmpty 判断参数是否为空，使用内置方法#dates.format 格式化参数</p><p>四、使用th:each属性循环遍历，注意该属性修改在tr标签上。并使用th:text属性给td标签赋值</p>',0,'1218159597450285064',1,0,1,'Thyleaf语法详解',NULL,1,'2020-01-18 16:47:46','2020年01月18日','2020-01-18 16:47:46','2020年01月18日');

/*Table structure for table `article_type` */

DROP TABLE IF EXISTS `article_type`;

CREATE TABLE `article_type` (
  `id` varchar(50) NOT NULL,
  `name` varchar(50) DEFAULT NULL,
  `description` varchar(50) DEFAULT NULL,
  `create_time` varchar(50) DEFAULT NULL,
  `status` tinyint(2) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `article_type` */

insert  into `article_type`(`id`,`name`,`description`,`create_time`,`status`) values ('1218159596531732481','Java','Java','2020-01-17 21:14:14',1);
insert  into `article_type`(`id`,`name`,`description`,`create_time`,`status`) values ('1218159597450285058','Python','Python','2020-01-17 21:14:14',1);
insert  into `article_type`(`id`,`name`,`description`,`create_time`,`status`) values ('1218159597450285059','Linux','Linux','2020-01-17 21:14:14',1);
insert  into `article_type`(`id`,`name`,`description`,`create_time`,`status`) values ('1218159597450285060','Html','Html','2020-01-17 21:14:14',1);
insert  into `article_type`(`id`,`name`,`description`,`create_time`,`status`) values ('1218159597450285061','Vue','Vue','2020-01-17 21:14:14',1);
insert  into `article_type`(`id`,`name`,`description`,`create_time`,`status`) values ('1218159597450285062','数据库','数据库','2020-01-17 21:14:14',1);
insert  into `article_type`(`id`,`name`,`description`,`create_time`,`status`) values ('1218159597450285063','Spring','Spring','2020-01-17 21:14:14',1);
insert  into `article_type`(`id`,`name`,`description`,`create_time`,`status`) values ('1218159597450285064','Spring boot','Spring boot','2020-01-17 21:14:14',1);
insert  into `article_type`(`id`,`name`,`description`,`create_time`,`status`) values ('1218159597450285065','Spring cloud','Spring cloud','2020-01-17 21:14:14',1);
insert  into `article_type`(`id`,`name`,`description`,`create_time`,`status`) values ('1218159597450285066','mybatis','mybatis','2020-01-17 21:14:14',1);
insert  into `article_type`(`id`,`name`,`description`,`create_time`,`status`) values ('1218159597450285067','博客','博客','2020-01-17 21:14:14',1);

/*Table structure for table `member_info` */

DROP TABLE IF EXISTS `member_info`;

CREATE TABLE `member_info` (
  `id` varchar(50) NOT NULL COMMENT 'ID',
  `nickname` varchar(36) DEFAULT NULL COMMENT '昵称',
  `account` varchar(36) DEFAULT NULL COMMENT '账号',
  `password` varchar(255) DEFAULT NULL COMMENT '密码',
  `avatar_url` varchar(255) DEFAULT NULL COMMENT '头像地址',
  `mobile` varchar(30) DEFAULT NULL COMMENT '电话号码',
  `email` varchar(50) DEFAULT NULL COMMENT '邮箱',
  `description` varchar(125) DEFAULT NULL COMMENT '描述',
  `gender` int(2) DEFAULT NULL COMMENT '0未知，1男，2女',
  `birthday` varchar(30) DEFAULT NULL COMMENT '生日',
  `remark` varchar(255) DEFAULT NULL COMMENT '备注',
  `score` int(11) DEFAULT NULL COMMENT '积分',
  `role_id` varchar(50) DEFAULT NULL COMMENT '角色id',
  `account_type` enum('USER','ADMIN') DEFAULT 'USER' COMMENT '账户类型',
  `register_time` varchar(50) DEFAULT NULL COMMENT '注册时间',
  `status` tinyint(2) DEFAULT NULL COMMENT '状态：1正常',
  `last_login_ip` varchar(25) DEFAULT NULL COMMENT '最近登录ip',
  `last_login_time` varchar(50) DEFAULT NULL COMMENT '最近登录时间',
  `update_time` varchar(50) DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `member_info` */

insert  into `member_info`(`id`,`nickname`,`account`,`password`,`avatar_url`,`mobile`,`email`,`description`,`gender`,`birthday`,`remark`,`score`,`role_id`,`account_type`,`register_time`,`status`,`last_login_ip`,`last_login_time`,`update_time`) values ('1218152760495570946','我是管理员','812560654','$2a$10$lIM.ZMD1bKn3cGXllGMgae1blLPk/Y..HCmkx8qc4OtIVzXebMHaK','http://www.gdni.cn:8001/favicon.ico','18829073823','18829073823@163.com',NULL,0,NULL,NULL,100000,NULL,'ADMIN','2020-01-17 20:47:04',1,NULL,NULL,NULL);

/*Table structure for table `sys_notice` */

DROP TABLE IF EXISTS `sys_notice`;

CREATE TABLE `sys_notice` (
  `id` varchar(50) NOT NULL,
  `user_id` varchar(50) NOT NULL COMMENT '被通知的用户ID',
  `status` enum('RELEASE','NOT_RELEASE') DEFAULT 'NOT_RELEASE' COMMENT '通知状态',
  `title` varchar(200) DEFAULT NULL COMMENT '通知的标题',
  `content` mediumtext COMMENT '通知的内容',
  `create_time` varchar(50) DEFAULT NULL COMMENT '添加时间',
  `update_time` varchar(50) DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='系统公告表';

/*Data for the table `sys_notice` */

/*Table structure for table `sys_resources` */

DROP TABLE IF EXISTS `sys_resources`;

CREATE TABLE `sys_resources` (
  `id` varchar(50) NOT NULL COMMENT 'id',
  `name` varchar(50) DEFAULT NULL COMMENT '名称',
  `type` varchar(50) DEFAULT NULL COMMENT '资源类型 menu，button',
  `url` varchar(255) DEFAULT NULL COMMENT '连接',
  `permission` varchar(50) DEFAULT NULL COMMENT '权限',
  `parent_id` varchar(50) DEFAULT '0' COMMENT '父id',
  `sort` int(11) DEFAULT NULL COMMENT '排序',
  `available` tinyint(2) DEFAULT '1' COMMENT '1可用，0不可用',
  `create_time` varchar(50) DEFAULT NULL,
  `update_time` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `sys_resources` */

/*Table structure for table `sys_role` */

DROP TABLE IF EXISTS `sys_role`;

CREATE TABLE `sys_role` (
  `id` varchar(50) NOT NULL,
  `name` varchar(100) DEFAULT NULL COMMENT '角色名',
  `description` varchar(100) DEFAULT NULL,
  `available` tinyint(1) DEFAULT '0',
  `create_time` varchar(50) DEFAULT NULL COMMENT '添加时间',
  `update_time` varchar(50) DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `sys_role` */

insert  into `sys_role`(`id`,`name`,`description`,`available`,`create_time`,`update_time`) values ('1218150016577773569','管理员','admin',1,'2020-01-17 20:36:10',NULL);

/*Table structure for table `sys_role_resources` */

DROP TABLE IF EXISTS `sys_role_resources`;

CREATE TABLE `sys_role_resources` (
  `id` varchar(50) NOT NULL,
  `role_id` varchar(50) NOT NULL,
  `resources_id` varchar(50) NOT NULL,
  `create_time` varchar(50) DEFAULT NULL COMMENT '添加时间',
  `update_time` varchar(50) DEFAULT NULL COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `sys_role_resources` */

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
